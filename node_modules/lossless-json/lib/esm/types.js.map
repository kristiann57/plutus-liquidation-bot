{"version":3,"file":"types.js","names":[],"sources":["../../src/types.ts"],"sourcesContent":["export type Reviver = (key: string, value: unknown) => unknown\n\nexport type NumberParser = (value: string) => unknown\n\nexport type Replacer =\n  | ((key: string, value: unknown) => unknown | undefined)\n  | Array<string | number>\n\nexport interface NumberStringifier {\n  test: (value: unknown) => boolean\n  stringify: (value: unknown) => string\n}\n\nexport type GenericObject<T> = Record<string, T>\n\n/**\n * @deprecated use `unknown` or `string | number | boolean | null` instead\n */\nexport type JSONPrimitive = string | number | boolean | null\n\n/**\n * @deprecated use `unknown` instead\n */\nexport type JSONValue =\n  | { [key: string]: JSONValue } // object\n  | JSONValue[] // array\n  | JSONPrimitive\n\n/**\n * @deprecated use `unknown` or a Record instead\n */\nexport type JSONObject = { [key: string]: JSONValue }\n\n/**\n * @deprecated use `unknown` or an Array instead\n */\nexport type JSONArray = JSONValue[]\n\n/**\n * @deprecated use `unknown` instead\n */\nexport type JavaScriptPrimitive = unknown\n\n/**\n * @deprecated use `unknown` instead\n */\nexport type JavaScriptValue = unknown\n\n/**\n * @deprecated use `unknown` instead\n */\nexport type JavaScriptObject = unknown\n\n/**\n * @deprecated use `unknown` instead\n */\nexport type JavaScriptArray = unknown\n"],"mappings":""}