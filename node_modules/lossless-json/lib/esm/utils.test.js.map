{"version":3,"file":"utils.test.js","names":["test","expect","extractSignificantDigits","getUnsafeNumberReason","isInteger","isNumber","isSafeNumber","toSafeNumberOrThrow","UnsafeNumberReason","toEqual","approx","toBe","undefined","overflow","underflow","truncate_integer","truncate_float","toThrow"],"sources":["../../src/utils.test.ts"],"sourcesContent":["import { test, expect } from 'vitest'\nimport {\n  extractSignificantDigits,\n  getUnsafeNumberReason,\n  isInteger,\n  isNumber,\n  isSafeNumber,\n  toSafeNumberOrThrow,\n  UnsafeNumberReason\n} from './utils'\n\ntest('isInteger', () => {\n  expect(isInteger('4250')).toEqual(true)\n  expect(isInteger('-4250')).toEqual(true)\n  expect(isInteger('2.345')).toEqual(false)\n})\n\ntest('isNumber', () => {\n  expect(isNumber('4250')).toEqual(true)\n  expect(isNumber('-4250')).toEqual(true)\n  expect(isNumber('2.345')).toEqual(true)\n  expect(isNumber('2.345e3')).toEqual(true)\n  expect(isNumber('2.345e+3')).toEqual(true)\n  expect(isNumber('2.345e-3')).toEqual(true)\n  expect(isNumber('2.3450e-3')).toEqual(true)\n  expect(isNumber('-2.3450e-3')).toEqual(true)\n})\n\ntest('isSafeNumber', () => {\n  expect(isSafeNumber('2.3')).toEqual(true)\n  expect(isSafeNumber('2.3e4')).toEqual(true)\n  expect(isSafeNumber('1234567890')).toEqual(true)\n\n  expect(isSafeNumber('2e500')).toEqual(false)\n  expect(isSafeNumber('2e-500')).toEqual(false)\n  expect(isSafeNumber('0.66666666666666666667')).toEqual(false)\n  expect(isSafeNumber('12345678901234567890')).toEqual(false)\n  expect(isSafeNumber('1.2345678901234567890')).toEqual(false)\n\n  // the following number loses formatting, but the value stays the same and hence is safe\n  expect(isSafeNumber('2.300')).toEqual(true)\n})\n\ntest('isSafeNumber({ approx: false })', () => {\n  expect(isSafeNumber('0.66666666666666666667', { approx: false })).toEqual(false)\n  expect(isSafeNumber('1.2345678901234567890', { approx: false })).toEqual(false)\n})\n\ntest('isSafeNumber({ approx: true })', () => {\n  expect(isSafeNumber('2.3', { approx: true })).toEqual(true)\n  expect(isSafeNumber('2.3e4', { approx: true })).toEqual(true)\n  expect(isSafeNumber('1234567890', { approx: true })).toEqual(true)\n\n  expect(isSafeNumber('0.66666666666666666667', { approx: true })).toEqual(true)\n  expect(isSafeNumber('0.666666666666667', { approx: true })).toEqual(true)\n  expect(isSafeNumber('0.66666666666667', { approx: true })).toEqual(true)\n  expect(isSafeNumber('0.2345678901234567890', { approx: true })).toEqual(true)\n\n  expect(isSafeNumber('2e500', { approx: true })).toEqual(false)\n  expect(isSafeNumber('2e-500', { approx: true })).toEqual(false)\n  expect(isSafeNumber('12345678901234567890', { approx: true })).toEqual(false)\n})\n\ntest('getUnsafeNumberReason', () => {\n  expect(getUnsafeNumberReason('123')).toBe(undefined)\n  expect(getUnsafeNumberReason('0.666666667')).toBe(undefined)\n  expect(getUnsafeNumberReason('1e500')).toBe(UnsafeNumberReason.overflow)\n  expect(getUnsafeNumberReason('1e-500')).toBe(UnsafeNumberReason.underflow)\n  expect(getUnsafeNumberReason('12345678901234567890')).toBe(UnsafeNumberReason.truncate_integer)\n  expect(getUnsafeNumberReason('0.66666666666666666667')).toBe(UnsafeNumberReason.truncate_float)\n})\n\ntest('toSafeNumberOrThrow', () => {\n  expect(toSafeNumberOrThrow('123')).toBe(123)\n  expect(toSafeNumberOrThrow('0.666666667')).toBe(0.666666667)\n\n  expect(() => toSafeNumberOrThrow('1e500')).toThrow(\n    \"Cannot safely convert to number: the value '1e500' would overflow and become Infinity\"\n  )\n  expect(() => toSafeNumberOrThrow('1e-500')).toThrow(\n    \"Cannot safely convert to number: the value '1e-500' would underflow and become 0\"\n  )\n  expect(() => toSafeNumberOrThrow('12345678901234567890')).toThrow(\n    \"Cannot safely convert to number: the value '12345678901234567890' would truncate and become 12345678901234567000\"\n  )\n  expect(() => toSafeNumberOrThrow('0.66666666666666666667')).toThrow(\n    \"Cannot safely convert to number: the value '0.66666666666666666667' would truncate and become 0.6666666666666666\"\n  )\n})\n\ntest('toSafeNumberOrThrow({ approx: true })', () => {\n  expect(toSafeNumberOrThrow('123', { approx: true })).toBe(123)\n  expect(toSafeNumberOrThrow('0.666666667', { approx: true })).toBe(0.666666667)\n\n  expect(() => toSafeNumberOrThrow('1e500', { approx: true })).toThrow(\n    \"Cannot safely convert to number: the value '1e500' would overflow and become Infinity\"\n  )\n  expect(() => toSafeNumberOrThrow('1e-500', { approx: true })).toThrow(\n    \"Cannot safely convert to number: the value '1e-500' would underflow and become 0\"\n  )\n  expect(() => toSafeNumberOrThrow('12345678901234567890', { approx: true })).toThrow(\n    \"Cannot safely convert to number: the value '12345678901234567890' would truncate and become 12345678901234567000\"\n  )\n  expect(toSafeNumberOrThrow('0.66666666666666666667', { approx: true })).toBe(0.6666666666666666)\n})\n\ntest('extractSignificantDigits', () => {\n  expect(extractSignificantDigits('2.345')).toEqual('2345')\n  expect(extractSignificantDigits('23e4')).toEqual('23')\n  expect(extractSignificantDigits('230000')).toEqual('23')\n  expect(extractSignificantDigits('-77')).toEqual('77')\n  expect(extractSignificantDigits('0.003400')).toEqual('34')\n  expect(extractSignificantDigits('120.5e+30')).toEqual('1205')\n  expect(extractSignificantDigits('120.5e-30')).toEqual('1205')\n  expect(extractSignificantDigits('0120.50E-30')).toEqual('1205')\n  expect(extractSignificantDigits('01200')).toEqual('12')\n  expect(extractSignificantDigits('-01200')).toEqual('12')\n})\n"],"mappings":"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"}