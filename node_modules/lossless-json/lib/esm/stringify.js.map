{"version":3,"file":"stringify.js","names":["isNumber","stringify","value","replacer","space","numberStringifiers","resolvedSpace","resolveSpace","replacedValue","call","stringifyValue","indent","Array","isArray","stringifier","find","item","test","str","Error","Date","Boolean","Number","String","JSON","isLosslessNumber","toString","stringifyArray","stringifyObject","undefined","array","length","childIndent","i","object","toJSON","keys","map","Object","first","forEach","key","includeProperty","keyStr","repeat"],"sources":["../../src/stringify.ts"],"sourcesContent":["import type { GenericObject, NumberStringifier, Replacer } from './types'\nimport { isNumber } from './utils.js'\n\n/**\n * The LosslessJSON.stringify() method converts a JavaScript value to a JSON string,\n * optionally replacing values if a replacer function is specified, or\n * optionally including only the specified properties if a replacer array is specified.\n *\n * @param value\n * The value to convert to a JSON string.\n *\n * @param [replacer]\n * A function that alters the behavior of the stringification process,\n * or an array of String and Number objects that serve as a whitelist for\n * selecting the properties of the value object to be included in the JSON string.\n * If this value is null or not provided, all properties of the object are\n * included in the resulting JSON string.\n *\n * @param [space]\n * A String or Number object that's used to insert white space into the output\n * JSON string for readability purposes. If this is a Number, it indicates the\n * number of space characters to use as white space; this number is capped at 10\n * if it's larger than that. Values less than 1 indicate that no space should be\n * used. If this is a String, the string (or the first 10 characters of the string,\n * if it's longer than that) is used as white space. If this parameter is not\n * provided (or is null), no white space is used.\n *\n * @param [numberStringifiers]\n * An optional list with additional number stringifiers, for example to serialize\n * a BigNumber. The output of the function must be valid stringified JSON.\n * When `undefined` is returned, the property will be deleted from the object.\n * The difference with using a `replacer` is that the output of a `replacer`\n * must be JSON and will be stringified afterwards, whereas the output of the\n * `numberStringifiers` is already stringified JSON.\n *\n * @returns Returns the string representation of the JSON object.\n */\nexport function stringify(\n  value: unknown,\n  replacer?: Replacer | null,\n  space?: number | string,\n  numberStringifiers?: NumberStringifier[]\n): string | undefined {\n  const resolvedSpace = resolveSpace(space)\n\n  const replacedValue =\n    typeof replacer === 'function' ? replacer.call({ '': value }, '', value) : value\n\n  return stringifyValue(replacedValue, '')\n\n  /**\n   * Stringify a value\n   */\n  function stringifyValue(value: unknown, indent: string | undefined): string | undefined {\n    if (Array.isArray(numberStringifiers)) {\n      const stringifier = numberStringifiers.find((item) => item.test(value))\n      if (stringifier) {\n        const str: unknown = stringifier.stringify(value)\n        if (typeof str !== 'string' || !isNumber(str)) {\n          throw new Error(\n            'Invalid JSON number: ' +\n              'output of a number stringifier must be a string containing a JSON number ' +\n              `(output: ${str})`\n          )\n        }\n        return str\n      }\n    }\n\n    // boolean, null, number, string, or date\n    if (\n      typeof value === 'boolean' ||\n      typeof value === 'number' ||\n      typeof value === 'string' ||\n      value === null ||\n      value instanceof Date ||\n      value instanceof Boolean ||\n      value instanceof Number ||\n      value instanceof String\n    ) {\n      return JSON.stringify(value)\n    }\n\n    // lossless number, the secret ingredient :)\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore\n    if (value && value.isLosslessNumber) {\n      return value.toString()\n    }\n\n    // BigInt\n    if (typeof value === 'bigint') {\n      return value.toString()\n    }\n\n    // Array\n    if (Array.isArray(value)) {\n      return stringifyArray(value, indent)\n    }\n\n    // Object (test lastly!)\n    if (value && typeof value === 'object') {\n      return stringifyObject(value as GenericObject<unknown>, indent)\n    }\n\n    return undefined\n  }\n\n  /**\n   * Stringify an array\n   */\n  function stringifyArray(array: Array<unknown>, indent: string | undefined): string {\n    if (array.length === 0) {\n      return '[]'\n    }\n\n    const childIndent = resolvedSpace ? indent + resolvedSpace : undefined\n    let str = resolvedSpace ? '[\\n' : '['\n\n    for (let i = 0; i < array.length; i++) {\n      const item =\n        typeof replacer === 'function' ? replacer.call(array, String(i), array[i]) : array[i]\n\n      if (resolvedSpace) {\n        str += childIndent\n      }\n\n      if (typeof item !== 'undefined' && typeof item !== 'function') {\n        str += stringifyValue(item, childIndent)\n      } else {\n        str += 'null'\n      }\n\n      if (i < array.length - 1) {\n        str += resolvedSpace ? ',\\n' : ','\n      }\n    }\n\n    str += resolvedSpace ? '\\n' + indent + ']' : ']'\n    return str\n  }\n\n  /**\n   * Stringify an object\n   */\n  function stringifyObject(\n    object: GenericObject<unknown>,\n    indent: string | undefined\n  ): string | undefined {\n    if (typeof object.toJSON === 'function') {\n      return stringify(object.toJSON(), replacer, space, undefined)\n    }\n\n    const keys: string[] = Array.isArray(replacer) ? replacer.map(String) : Object.keys(object)\n\n    if (keys.length === 0) {\n      return '{}'\n    }\n\n    const childIndent = resolvedSpace ? indent + resolvedSpace : undefined\n    let first = true\n    let str = resolvedSpace ? '{\\n' : '{'\n\n    keys.forEach((key) => {\n      const value =\n        typeof replacer === 'function' ? replacer.call(object, key, object[key]) : object[key]\n\n      if (includeProperty(key, value)) {\n        if (first) {\n          first = false\n        } else {\n          str += resolvedSpace ? ',\\n' : ','\n        }\n\n        const keyStr = JSON.stringify(key)\n        str += resolvedSpace ? childIndent + keyStr + ': ' : keyStr + ':'\n\n        str += stringifyValue(value, childIndent)\n      }\n    })\n\n    str += resolvedSpace ? '\\n' + indent + '}' : '}'\n    return str\n  }\n\n  /**\n   * Test whether to include a property in a stringified object or not.\n   */\n  function includeProperty(key: string, value: unknown): boolean {\n    return typeof value !== 'undefined' && typeof value !== 'function' && typeof value !== 'symbol'\n  }\n}\n\n/**\n * Resolve a JSON stringify space:\n * replace a number with a string containing that number of spaces\n */\nfunction resolveSpace(space: number | string | undefined): string | undefined {\n  if (typeof space === 'number') {\n    return ' '.repeat(space)\n  }\n\n  if (typeof space === 'string' && space !== '') {\n    return space\n  }\n\n  return undefined\n}\n"],"mappings":"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"}